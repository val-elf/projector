{
  "version": 3,
  "file": "UIView.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react/components/UIView.tsx"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "/**\n * @reactapi\n * @module components\n */ /** */\nimport * as React from 'react';\nimport {\n  Component,\n  ValidationMap,\n  createElement,\n  cloneElement,\n  isValidElement,\n  SFC,\n  ClassType,\n  StatelessComponent,\n  ComponentClass,\n  ClassicComponentClass,\n} from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { ActiveUIView, ViewContext, Transition, ResolveContext, StateParams, applyPairs } from '@uirouter/core';\n\nimport { UIRouterReact, UIRouterConsumer } from '../index';\nimport { ReactViewConfig } from '../reactViews';\nimport { UIRouterInstanceUndefinedError } from './UIRouter';\n\n/** @internalapi */\nlet id = 0;\n\n/** @internalapi */\nexport interface UIViewAddress {\n  context: ViewContext;\n  fqn: string;\n}\n\n/**\n * Interface for [[InjectedProps.resolves]]\n *\n * This Typescript interface shows what fields are available on the `resolves` field.\n */\nexport interface UIViewResolves {\n  /**\n   * Any key/value pair defined by a state's resolve\n   *\n   * If a state defines any [[ReactStateDeclaration.resolve]]s, they will be found on this object.\n   */\n  [key: string]: any;\n  /**\n   * The `StateParams` for the `Transition` that activated the component\n   *\n   * This is an alias for:\n   * ```js\n   * let $stateParams = $transition$.params(\"to\");\n   * ```\n   */\n  $stateParams: StateParams;\n  /** The `Transition` that activated the component */\n  $transition$: Transition;\n}\n\n/**\n * Function type for [[UIViewProps.render]]\n *\n * If the `render` function prop is provided, the `UIView` will use it instead of rendering the component by itself.\n * @internalapi\n */\nexport type RenderPropCallback = (\n  Component: StatelessComponent<any> | ComponentClass<any> | ClassicComponentClass<any>,\n  Props: any\n) => JSX.Element | null;\n\nexport interface UIViewInjectedProps {\n  transition?: Transition;\n  resolves?: UIViewResolves;\n  className?: string;\n  style?: Object;\n}\n\n/** Component Props for `UIView` */\nexport interface UIViewProps {\n  router?: UIRouterReact;\n  parentUIView?: UIViewAddress;\n  name?: string;\n  className?: string;\n  style?: Object;\n  render?: RenderPropCallback;\n}\n\n/** Component State for `UIView` */\nexport interface UIViewState {\n  id?: number;\n  loaded?: boolean;\n  component?: string | SFC<any> | ClassType<any, any, any> | ComponentClass<any>;\n  props?: any;\n}\n\nexport const TransitionPropCollisionError = new Error(\n  '`transition` cannot be used as resolve token. ' +\n    'Please rename your resolve to avoid conflicts with the router transition.'\n);\n\n/** @internalapi */\nexport const { Provider: UIViewProvider, Consumer: UIViewConsumer } = React.createContext<UIViewAddress>(undefined);\n\nclass View extends Component<UIViewProps, UIViewState> {\n  // This object contains all the metadata for this UIView\n  uiViewData: ActiveUIView;\n\n  // This object contains only the state context which created this <UIView/> component\n  // and the UIView's fully qualified name. This object is made available to children via `context`\n  uiViewAddress: UIViewAddress;\n\n  // Deregisters the UIView when it is unmounted\n  deregister: Function;\n\n  // Bind the rendered component instance in order to call its uiCanExit hook\n  componentInstance: any;\n  // Removes th Hook when the UIView is unmounted\n  removeHook: Function;\n\n  state: UIViewState = {\n    loaded: false,\n    component: 'div',\n    props: {},\n  };\n\n  static propTypes: ValidationMap<UIViewProps> = {\n    router: PropTypes.object.isRequired,\n    parentUIView: PropTypes.object,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    render: PropTypes.func,\n  };\n\n  render() {\n    let { children, render } = this.props;\n    let { component, props, loaded } = this.state;\n    // register reference of child component\n    // register new hook right after component has been rendered\n    let stateName: string = this.uiViewAddress && this.uiViewAddress.context && this.uiViewAddress.context.name;\n\n    // only class components can implement the\n    // uiCanExit hook and ref doesn't work on\n    // stateless function components\n    if (\n      typeof component !== 'string' &&\n      (!!component.render || (component.prototype && !!component.prototype.render))\n    ) {\n      props.ref = c => {\n        this.componentInstance = c;\n        this.registerUiCanExitHook(stateName);\n      };\n    }\n\n    // attach any style or className to the rendered component\n    // specified on the UIView itself\n    const { className, style } = this.props;\n    const styleProps = { className, style };\n    const childProps = { ...props, ...styleProps };\n\n    let child =\n      !loaded && isValidElement(children) ? cloneElement(children, childProps) : createElement(component, childProps);\n\n    // if a render function is passed use that,\n    // otherwise render the component normally\n    const ChildOrRenderFunction = typeof render !== 'undefined' && loaded ? render(component, childProps) : child;\n    return <UIViewProvider value={this.uiViewAddress}>{ChildOrRenderFunction}</UIViewProvider>;\n  }\n\n  componentWillMount() {\n    const router = this.props.router;\n    if (typeof router === 'undefined') {\n      throw UIRouterInstanceUndefinedError;\n    }\n\n    // Check the context for the parent UIView's fqn and State\n    let parent: UIViewAddress = this.props.parentUIView;\n    // Not found in context, this is a root UIView\n    parent = parent || { fqn: '', context: router.stateRegistry.root() };\n\n    let name = this.props.name || '$default';\n\n    this.uiViewData = {\n      $type: 'react',\n      id: ++id,\n      name: name,\n      fqn: parent.fqn ? parent.fqn + '.' + name : name,\n      creationContext: parent.context,\n      configUpdated: this.viewConfigUpdated.bind(this),\n      config: undefined,\n    } as ActiveUIView;\n\n    this.uiViewAddress = { fqn: this.uiViewData.fqn, context: undefined };\n\n    this.deregister = router.viewService.registerUIView(this.uiViewData);\n\n    this.setState({ id: this.uiViewData.id });\n  }\n\n  componentWillUnmount() {\n    this.deregister();\n  }\n\n  /**\n   * View config updated callback\n   *\n   * This is called by UI-Router during ViewService.sync().\n   * The `newConfig` parameter will contain view configuration (component, etc) when a\n   * state is activated and one of its views targets this `UIView`.\n   */\n  viewConfigUpdated(newConfig: ReactViewConfig) {\n    if (newConfig === this.uiViewData.config) {\n      return;\n    }\n\n    let trans: Transition;\n    let resolves = {};\n\n    if (newConfig) {\n      let viewContext: ViewContext = newConfig.viewDecl && newConfig.viewDecl.$context;\n      this.uiViewAddress = {\n        fqn: this.uiViewAddress.fqn,\n        context: viewContext,\n      };\n\n      let resolveContext = new ResolveContext(newConfig.path);\n      let injector = resolveContext.injector();\n\n      let stringTokens: string[] = resolveContext.getTokens().filter(x => typeof x === 'string');\n      if (stringTokens.indexOf('transition') !== -1) {\n        throw TransitionPropCollisionError;\n      }\n\n      trans = injector.get(Transition);\n      resolves = stringTokens.map(token => [token, injector.get(token)]).reduce(applyPairs, {});\n    }\n\n    this.uiViewData.config = newConfig;\n    const key = Date.now();\n    let props = { ...resolves, transition: trans, key };\n\n    let newComponent = newConfig && newConfig.viewDecl && newConfig.viewDecl.component;\n    this.setState({\n      component: newComponent || 'div',\n      props: newComponent ? props : {},\n      loaded: !!newComponent,\n    });\n  }\n\n  registerUiCanExitHook(stateName: string) {\n    typeof this.removeHook === 'function' && this.removeHook();\n    let criteria = { exiting: stateName };\n    let callback =\n      this.componentInstance &&\n      typeof this.componentInstance.uiCanExit === 'function' &&\n      this.componentInstance.uiCanExit;\n    if (stateName && callback) {\n      let transitions = this.props.router.transitionService;\n      this.removeHook = transitions.onBefore(criteria, callback, {});\n    }\n  }\n}\n\nexport class UIView extends React.Component<UIViewProps, any> {\n  static displayName = 'UIView';\n  static __internalViewComponent: React.ComponentClass<UIViewProps> = View;\n\n  render() {\n    return (\n      <UIRouterConsumer>\n        {router => (\n          <UIViewConsumer>\n            {parentUIView => <View {...this.props} router={router} parentUIView={parentUIView} />}\n          </UIViewConsumer>\n        )}\n      </UIRouterConsumer>\n    );\n  }\n}\n"
  ]
}