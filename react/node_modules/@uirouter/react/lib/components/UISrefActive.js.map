{
  "version": 3,
  "file": "UISrefActive.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react/components/UISrefActive.tsx"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;GAGG,CAAC,MAAM;AACV,6BAA+B;AAC/B,+BAA+D;AAC/D,sCAAwC;AACxC,wCAA0C;AAE1C,kCAAmE;AAEnE,uCAA4D;AAE5D,mCAA0C;AAE1C,IAAI,UAAU,GAAG,WAAW,CAAC;AAkBhB,QAAA,2BAA2B,GAAG,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;AAE/G,mBAAmB;AACM,QAAA,oBAAoB,IAAhC,KAAqE,KAAK,CAAC,aAAa,CACnG,SAAS,CACV,gBAFwD,QAAA,oBAAoB,eAE3E;AAEF;IAAyB,8BAAiC;IAA1D;QAAA,qEAiHC;QAhHC,wDAAwD;QACxD,YAAM,GAA6B,EAAE,CAAC;QACtC,mBAAa,GAA8B,EAAE,CAAC;QAc9C,WAAK,GAAG;YACN,aAAa,EAAE,EAAE;SAClB,CAAC;QAeF,kBAAY,GAAG,UAAC,SAAS,EAAE,WAAW;YACpC,IAAM,WAAW,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YACrC,IAAI,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;YACpE,IAAM,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,0BAA0B,CAAC;YAC3D,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAE3B,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;gBACtC,IAAM,kBAAgB,GAAG,YAAY,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;gBAC9D,OAAO;oBACL,UAAU,EAAE,CAAC;oBACb,kBAAgB,EAAE,CAAC;gBACrB,CAAC,CAAC;aACH;YAED,OAAO,UAAU,CAAC;QACpB,CAAC,CAAC;QAEF,cAAQ,GAAG,UAAC,SAAS,EAAE,WAAW,EAAE,WAAW;YACrC,IAAA,8CAAY,CAAuB;YAC3C,IAAI,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YACrC,IAAI,YAAY,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;YACxF,IAAI,KAAK,GAAG,YAAY,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YACtD,IAAI,SAAS,GAAG,KAAI,CAAC,eAAe,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;YAC7D,IAAI,SAAS,GAAG;gBACd,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE;gBACnC,MAAM,EAAE,WAAW;gBACnB,IAAI,EAAE,SAAS;aAChB,CAAC;YACF,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;YAC5C,OAAO;gBACL,IAAI,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBACzC,IAAI,GAAG,KAAK,CAAC,CAAC;oBAAE,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC7C,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,qBAAe,GAAG,UAAC,KAAa,EAAE,MAAc;YAC9C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC7B,MAAM,mCAA2B,CAAC;aACnC;YACD,OAAO,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACvF,CAAC,CAAC;QAEF,sBAAgB,GAAG;YACjB,IAAI,aAAa,GAAG,EAAE,CAAC;YACjB,IAAA,8CAAY,CAAuB;YACnC,IAAA,yBAAK,CAAgB;YAC3B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;gBACb,IAAA,eAAK,EAAE,iBAAM,EAAE,aAAI,CAAO;gBAChC,IAAI,CAAC,KAAK,IAAI,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC;oBAAE,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;gBACtG,IAAI,KAAK,IAAI,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC;oBAAE,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;YACjG,CAAC,CAAC,CAAC;YACH,OAAO,UAAU,CAAC,aAAa,CAAC,CAAC;QACnC,CAAC,CAAC;QAEF,yBAAmB,GAAG;YACZ,IAAA,yCAAa,CAAgB;YACrC,IAAM,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACjD,IAAI,aAAa,KAAK,gBAAgB,EAAE;gBACtC,KAAI,CAAC,QAAQ,CAAC;oBACZ,aAAa,EAAE,KAAI,CAAC,gBAAgB,EAAE;iBACvC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;;IAgBJ,CAAC;IA5FC,uCAAkB,GAAlB;QAAA,iBAOC;QANC,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACjC,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACjC,MAAM,yCAA8B,CAAC;SACtC;QACD,qCAAqC;QACrC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAAE,EAAE,cAAM,OAAA,KAAI,CAAC,mBAAmB,EAAE,EAA1B,CAA0B,CAAC,CAAC;IAC7F,CAAC;IAED,yCAAoB,GAApB;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAmED,2BAAM,GAAN;QACU,IAAA,wCAAa,CAAgB;QAC7B,IAAA,gCAAS,CAAgB;QACjC,IAAM,QAAQ,GACZ,aAAa,CAAC,MAAM,GAAG,CAAC;YACtB,CAAC,CAAC,oBAAY,CACV,IAAI,CAAC,KAAK,CAAC,QAAQ,EACnB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE;gBAC3C,SAAS,EAAE,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,aAAa,CAAC;aACrF,CAAC,CACH;YACH,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC1B,OAAO,oBAAC,4BAAoB,IAAC,KAAK,EAAE,IAAI,CAAC,YAAY,IAAG,QAAQ,CAAwB,CAAC;IAC3F,CAAC;IAxGM,oBAAS,GAAG;QACjB,YAAY,EAAE,SAAS,CAAC,MAAM;QAC9B,0BAA0B,EAAE,SAAS,CAAC,IAAI;QAC1C,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;QACnC,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;QAClC,QAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,UAAU;QACtC,SAAS,EAAE,SAAS,CAAC,MAAM;KAC5B,CAAC;IAkGJ,iBAAC;CAAA,AAjHD,CAAyB,iBAAS,GAiHjC;AAEY,QAAA,YAAY,GAAG,UAAA,KAAK,IAAI,OAAA,CACnC,oBAAC,wBAAgB,QACd,UAAA,MAAM,IAAI,OAAA,CACT,oBAAC,uBAAc,QACZ,UAAA,YAAY,IAAI,OAAA,CACf,oBAAC,4BAAoB,QAClB,UAAA,YAAY,IAAI,OAAA,CACf,oBAAC,UAAU,eACL,KAAK,IACT,MAAM,EAAE,MAAM,EACd,YAAY,EAAE,YAAY,EAC1B,0BAA0B,EAAE,YAAY,IACxC,CACH,EAPgB,CAOhB,CACoB,CACxB,EAXgB,CAWhB,CACc,CAClB,EAfU,CAeV,CACgB,CACpB,EAnBoC,CAmBpC,CAAC;AAED,oBAAoB,CAAC,WAAW,GAAG,cAAc,CAAC",
  "sourcesContent": [
    "/**\n * @reactapi\n * @module components\n */ /** */\nimport * as React from 'react';\nimport { Component, cloneElement, ValidationMap } from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _classNames from 'classnames';\n\nimport { UIRouterReact, UISref, UIRouterConsumer } from '../index';\nimport { UIViewAddress } from './UIView';\nimport { UIRouterInstanceUndefinedError } from './UIRouter';\n\nimport { UIViewConsumer } from './UIView';\n\nlet classNames = _classNames;\n\nexport interface UISrefActiveProps {\n  parentUIView: UIViewAddress;\n  addStateInfoToParentActive: Function;\n  router: UIRouterReact;\n  class?: string;\n  exact?: Boolean;\n  children?: any;\n  className?: string;\n}\n\nexport interface UISrefActiveState {\n  state: { name?: string; [key: string]: any };\n  params: Object;\n  hash: string;\n}\n\nexport const StateNameMustBeAStringError = new Error('State name provided to <UISref {to}> must be a string.');\n\n/** @internalapi */\nexport const { Provider: UISrefActiveProvider, Consumer: UISrefActiveConsumer } = React.createContext<Function>(\n  undefined\n);\n\nclass SrefActive extends Component<UISrefActiveProps, any> {\n  // keep track of states to watch and their activeClasses\n  states: Array<UISrefActiveState> = [];\n  activeClasses: { [key: string]: string } = {};\n\n  // deregister the callback for state changed when unmounted\n  deregister: Function;\n\n  static propTypes = {\n    parentUIView: PropTypes.object,\n    addStateInfoToParentActive: PropTypes.func,\n    router: PropTypes.object.isRequired,\n    class: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n    className: PropTypes.string,\n  };\n\n  state = {\n    activeClasses: '',\n  };\n\n  componentWillMount() {\n    const router = this.props.router;\n    if (typeof router === 'undefined') {\n      throw UIRouterInstanceUndefinedError;\n    }\n    // register callback for state change\n    this.deregister = router.transitionService.onSuccess({}, () => this.updateActiveClasses());\n  }\n\n  componentWillUnmount() {\n    this.deregister();\n  }\n\n  addStateInfo = (stateName, stateParams) => {\n    const activeClass = this.props.class;\n    let deregister = this.addState(stateName, stateParams, activeClass);\n    const addStateInfo = this.props.addStateInfoToParentActive;\n    this.updateActiveClasses();\n\n    if (typeof addStateInfo === 'function') {\n      const parentDeregister = addStateInfo(stateName, stateParams);\n      return () => {\n        deregister();\n        parentDeregister();\n      };\n    }\n\n    return deregister;\n  };\n\n  addState = (stateName, stateParams, activeClass) => {\n    const { stateService } = this.props.router;\n    let parent = this.props.parentUIView;\n    let stateContext = (parent && parent.context) || this.props.router.stateRegistry.root();\n    let state = stateService.get(stateName, stateContext);\n    let stateHash = this.createStateHash(stateName, stateParams);\n    let stateInfo = {\n      state: state || { name: stateName },\n      params: stateParams,\n      hash: stateHash,\n    };\n    this.states.push(stateInfo);\n    this.activeClasses[stateHash] = activeClass;\n    return () => {\n      let idx = this.states.indexOf(stateInfo);\n      if (idx !== -1) this.states.splice(idx, 1);\n    };\n  };\n\n  createStateHash = (state: string, params: Object) => {\n    if (typeof state !== 'string') {\n      throw StateNameMustBeAStringError;\n    }\n    return params && typeof params === 'object' ? state + JSON.stringify(params) : state;\n  };\n\n  getActiveClasses = (): string => {\n    let activeClasses = [];\n    let { stateService } = this.props.router;\n    let { exact } = this.props;\n    this.states.forEach(s => {\n      let { state, params, hash } = s;\n      if (!exact && stateService.includes(state.name, params)) activeClasses.push(this.activeClasses[hash]);\n      if (exact && stateService.is(state.name, params)) activeClasses.push(this.activeClasses[hash]);\n    });\n    return classNames(activeClasses);\n  };\n\n  updateActiveClasses = (): void => {\n    const { activeClasses } = this.state;\n    const newActiveClasses = this.getActiveClasses();\n    if (activeClasses !== newActiveClasses) {\n      this.setState({\n        activeClasses: this.getActiveClasses(),\n      });\n    }\n  };\n\n  render() {\n    const { activeClasses } = this.state;\n    const { className } = this.props;\n    const children =\n      activeClasses.length > 0\n        ? cloneElement(\n            this.props.children,\n            Object.assign({}, this.props.children.props, {\n              className: classNames(className, this.props.children.props.className, activeClasses),\n            })\n          )\n        : this.props.children;\n    return <UISrefActiveProvider value={this.addStateInfo}>{children}</UISrefActiveProvider>;\n  }\n}\n\nexport const UISrefActive = props => (\n  <UIRouterConsumer>\n    {router => (\n      <UIViewConsumer>\n        {parentUIView => (\n          <UISrefActiveConsumer>\n            {addStateInfo => (\n              <SrefActive\n                {...props}\n                router={router}\n                parentUIView={parentUIView}\n                addStateInfoToParentActive={addStateInfo}\n              />\n            )}\n          </UISrefActiveConsumer>\n        )}\n      </UIViewConsumer>\n    )}\n  </UIRouterConsumer>\n);\n\n(UISrefActive as any).displayName = 'UISrefActive';\n"
  ]
}