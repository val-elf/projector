{
  "version": 3,
  "file": "UIRouter.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react/components/UIRouter.tsx"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;;;GAGG,CAAC,MAAM;AACV,6BAA+B;AAC/B,+BAA4C;AAC5C,sCAAwC;AAExC,uCAAgE;AAEhE,kCAAgE;AAIpD,QAAA,gBAAgB,IAFf,KAgBT,KAAK,CAAC,aAAa,CAAgB,SAAS,CAAC,gBADrC,QAAA,gBAAgB,eACsB;AAgBlD,cAAc;AACD,QAAA,6BAA6B,GAAG,IAAI,KAAK,CAAC,obAetD,CAAC,CAAC;AAEH,cAAc;AACD,QAAA,8BAA8B,GAAG,IAAI,KAAK,CACrD,6FAA6F,CAC9F,CAAC;AAEF;IAA8B,4BAAuC;IAWnE,kBAAY,KAAK,EAAE,OAAO;QAA1B,YACE,kBAAM,KAAK,EAAE,OAAO,CAAC,SActB;QAbC,yCAAyC;QACzC,IAAI,KAAK,CAAC,MAAM,EAAE;YAChB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;SAC5B;aAAM,IAAI,KAAK,CAAC,OAAO,EAAE;YACxB,KAAI,CAAC,MAAM,GAAG,IAAI,qBAAa,EAAE,CAAC;YAClC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAc,CAAC,CAAC;YACnC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAA1B,CAA0B,CAAC,CAAC;YAC5D,IAAI,KAAK,CAAC,MAAM;gBAAE,KAAK,CAAC,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAC5C,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAzC,CAAyC,CAAC,CAAC;SAClF;aAAM;YACL,MAAM,qCAA6B,CAAC;SACrC;QACD,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;;IACtB,CAAC;IAED,yBAAM,GAAN;QACE,OAAO,oBAAC,wBAAgB,IAAC,KAAK,EAAE,IAAI,CAAC,MAAM,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAoB,CAAC;IACxF,CAAC;IA7BM,kBAAS,GAAG;QACjB,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC;QAC1C,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;QAC3C,MAAM,EAAE,SAAS,CAAC,IAAI;QACtB,QAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,UAAU;QACtC,MAAM,EAAE,SAAS,CAAC,MAAM;KACzB,CAAC;IAwBJ,eAAC;CAAA,AA/BD,CAA8B,iBAAS,GA+BtC;AA/BY,4BAAQ",
  "sourcesContent": [
    "/**\n * @reactapi\n * @module components\n */ /** */\nimport * as React from 'react';\nimport { Component, Children } from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { UIRouterPlugin, servicesPlugin } from '@uirouter/core';\n\nimport { UIRouterReact, ReactStateDeclaration } from '../index';\n\nexport const {\n  /** @internalapi */\n  Provider: UIRouterProvider,\n  /**\n   * <UIRouterConsumer> component lets you access the UIRouter instance\n   * anywhere in the component tree, by simply wrapping your component and\n   * using the function-as-child pattern to pass the instance via props.\n   *\n   * #### Example:\n   * ```jsx\n   * <UIRouterConsumer>\n   *  {router => <MyComponent router={router} />}\n   * </UIRouterConsumer>\n   * ```\n   */\n  Consumer: UIRouterConsumer,\n} = React.createContext<UIRouterReact>(undefined);\n\nexport interface UIRouterProps {\n  plugins?: any[]; // should fix type\n  states?: ReactStateDeclaration[];\n  config?: (router: UIRouterReact) => void;\n  router?: UIRouterReact;\n}\n\nexport interface UIRouterState {\n  id?: number;\n  loaded?: boolean;\n  component?: string;\n  props?: any;\n}\n\n/** @hidden */\nexport const InstanceOrPluginsMissingError = new Error(`Router instance or plugins missing.\nYou must either provide a location plugin via the plugins prop:\n\n<UIRouter plugins={[pushStateLocationPlugin]} states={[···]}>\n  <UIView />\n</UIRouter>\n\nor initialize the router yourself and pass the instance via props:\n\nconst router = new UIRouterReact();\nrouter.plugin(pushStateLocationPlugin);\n···\n<UIRouter router={router}>\n  <UIView />\n</UIRouter>\n`);\n\n/** @hidden */\nexport const UIRouterInstanceUndefinedError = new Error(\n  `UIRouter instance is undefined. Did you forget to include the <UIRouter> as root component?`\n);\n\nexport class UIRouter extends Component<UIRouterProps, UIRouterState> {\n  static propTypes = {\n    plugins: PropTypes.arrayOf(PropTypes.func),\n    states: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.func,\n    children: PropTypes.element.isRequired,\n    router: PropTypes.object,\n  };\n\n  router: UIRouterReact;\n\n  constructor(props, context) {\n    super(props, context);\n    // check if a router instance is provided\n    if (props.router) {\n      this.router = props.router;\n    } else if (props.plugins) {\n      this.router = new UIRouterReact();\n      this.router.plugin(servicesPlugin);\n      props.plugins.forEach(plugin => this.router.plugin(plugin));\n      if (props.config) props.config(this.router);\n      (props.states || []).forEach(state => this.router.stateRegistry.register(state));\n    } else {\n      throw InstanceOrPluginsMissingError;\n    }\n    this.router.start();\n  }\n\n  render() {\n    return <UIRouterProvider value={this.router}>{this.props.children}</UIRouterProvider>;\n  }\n}\n"
  ]
}