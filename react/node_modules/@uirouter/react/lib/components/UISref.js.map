{
  "version": 3,
  "file": "UISref.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react/components/UISref.tsx"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;GAGG,CAAC,MAAM;AACV,6BAA+B;AAC/B,+BAA8F;AAC9F,sCAAwC;AACxC,wCAA0C;AAE1C,uCAAuE;AAEvE,kCAA2D;AAC3D,mCAAyD;AACzD,uCAA4D;AAC5D,+CAAoE;AAEpE,IAAI,UAAU,GAAG,WAAW,CAAC;AAa7B;IAAmB,wBAA2B;IAA9C;QAAA,qEA6DC;QAlCC,gBAAU,GAAG;YACX,IAAI,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YACrC,IAAI,aAAa,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;YACzF,IAAI,OAAO,GAAG,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;YACzD,OAAO,aAAM,CAAC,OAAO,EAAE,KAAI,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;QACnD,CAAC,CAAC;QAEF,iBAAW,GAAG,UAAA,CAAC;YACb,IAAM,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;YACvD,IAAI,iBAAU,CAAC,YAAY,CAAC,EAAE;gBAC5B,YAAY,CAAC,CAAC,CAAC,CAAC;aACjB;YAED,IAAI,CAAC,CAAC,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE;gBACrE,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC;gBACrC,IAAI,EAAE,GAAG,KAAI,CAAC,KAAK,CAAC,EAAE,CAAC;gBACvB,IAAI,OAAO,GAAG,KAAI,CAAC,UAAU,EAAE,CAAC;gBAChC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;aACxD;QACH,CAAC,CAAC;;IAcJ,CAAC;IA/CC,iCAAkB,GAAlB;QACE,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,0BAA0B,CAAC;QAC3D,IAAI,CAAC,UAAU,GAAG,OAAO,YAAY,KAAK,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAO,CAAC,CAAC;QACjH,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACjC,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACjC,MAAM,yCAA8B,CAAC;SACtC;IACH,CAAC;IAED,mCAAoB,GAApB;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAwBD,qBAAM,GAAN;QACE,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,EAClC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAClB,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC9B,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC9C,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE;YAC3C,OAAO,EAAE,IAAI,CAAC,WAAW;YACzB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC;YAC9D,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,aAAa,CAAC,SAAS,CAAC;SACrE,CAAC,CAAC;QACH,OAAO,oBAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IAzDM,cAAS,GAAG;QACjB,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;QACnC,YAAY,EAAE,SAAS,CAAC,MAAM;QAC9B,0BAA0B,EAAE,SAAS,CAAC,IAAI;QAC1C,QAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,UAAU;QACtC,EAAE,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;QAC/B,MAAM,EAAE,SAAS,CAAC,MAAM;QACxB,OAAO,EAAE,SAAS,CAAC,MAAM;QACzB,SAAS,EAAE,SAAS,CAAC,MAAM;KAC5B,CAAC;IAiDJ,WAAC;CAAA,AA7DD,CAAmB,iBAAS,GA6D3B;AAEY,QAAA,MAAM,GAAG,UAAA,KAAK,IAAI,OAAA,CAC7B,oBAAC,wBAAgB,QACd,UAAA,MAAM,IAAI,OAAA,CACT,oBAAC,uBAAc,QACZ,UAAA,YAAY,IAAI,OAAA,CACf,oBAAC,mCAAoB,QAClB,UAAA,YAAY,IAAI,OAAA,CACf,oBAAC,IAAI,eAAK,KAAK,IAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,0BAA0B,EAAE,YAAY,IAAI,CAC1G,EAFgB,CAEhB,CACoB,CACxB,EANgB,CAMhB,CACc,CAClB,EAVU,CAUV,CACgB,CACpB,EAd8B,CAc9B,CAAC;AAED,cAAc,CAAC,WAAW,GAAG,QAAQ,CAAC",
  "sourcesContent": [
    "/**\n * @reactapi\n * @module components\n */ /** */\nimport * as React from 'react';\nimport { Component, createElement, cloneElement, isValidElement, ValidationMap } from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _classNames from 'classnames';\n\nimport { extend, isFunction, TransitionOptions } from '@uirouter/core';\n\nimport { UIRouterReact, UIRouterConsumer } from '../index';\nimport { UIViewAddress, UIViewConsumer } from './UIView';\nimport { UIRouterInstanceUndefinedError } from './UIRouter';\nimport { UISrefActive, UISrefActiveConsumer } from './UISrefActive';\n\nlet classNames = _classNames;\n\nexport interface UISrefProps {\n  router: UIRouterReact;\n  addStateInfoToParentActive: Function;\n  parentUIView: UIViewAddress;\n  children?: any;\n  to: string;\n  params?: { [key: string]: any };\n  options?: TransitionOptions;\n  className?: string;\n}\n\nclass Sref extends Component<UISrefProps, any> {\n  // deregister function for parent UISrefActive\n  deregister: Function;\n  static propTypes = {\n    router: PropTypes.object.isRequired,\n    parentUIView: PropTypes.object,\n    addStateInfoToParentActive: PropTypes.func,\n    children: PropTypes.element.isRequired,\n    to: PropTypes.string.isRequired,\n    params: PropTypes.object,\n    options: PropTypes.object,\n    className: PropTypes.string,\n  };\n\n  componentWillMount() {\n    const addStateInfo = this.props.addStateInfoToParentActive;\n    this.deregister = typeof addStateInfo === 'function' ? addStateInfo(this.props.to, this.props.params) : () => {};\n    const router = this.props.router;\n    if (typeof router === 'undefined') {\n      throw UIRouterInstanceUndefinedError;\n    }\n  }\n\n  componentWillUnmount() {\n    this.deregister();\n  }\n\n  getOptions = () => {\n    let parent = this.props.parentUIView;\n    let parentContext = (parent && parent.context) || this.props.router.stateRegistry.root();\n    let defOpts = { relative: parentContext, inherit: true };\n    return extend(defOpts, this.props.options || {});\n  };\n\n  handleClick = e => {\n    const childOnClick = this.props.children.props.onClick;\n    if (isFunction(childOnClick)) {\n      childOnClick(e);\n    }\n\n    if (!e.defaultPrevented && !(e.button == 1 || e.metaKey || e.ctrlKey)) {\n      e.preventDefault();\n      let params = this.props.params || {};\n      let to = this.props.to;\n      let options = this.getOptions();\n      this.props.router.stateService.go(to, params, options);\n    }\n  };\n\n  render() {\n    let params = this.props.params || {},\n      to = this.props.to,\n      options = this.getOptions();\n    let childrenProps = this.props.children.props;\n    let props = Object.assign({}, childrenProps, {\n      onClick: this.handleClick,\n      href: this.props.router.stateService.href(to, params, options),\n      className: classNames(this.props.className, childrenProps.className),\n    });\n    return cloneElement(this.props.children, props);\n  }\n}\n\nexport const UISref = props => (\n  <UIRouterConsumer>\n    {router => (\n      <UIViewConsumer>\n        {parentUIView => (\n          <UISrefActiveConsumer>\n            {addStateInfo => (\n              <Sref {...props} router={router} parentUIView={parentUIView} addStateInfoToParentActive={addStateInfo} />\n            )}\n          </UISrefActiveConsumer>\n        )}\n      </UIViewConsumer>\n    )}\n  </UIRouterConsumer>\n);\n\n(UISref as any).displayName = 'UISref';\n"
  ]
}